;irRemote.txt
;This is a simple IR remote, sends signal.
;@author: Eddie Gurnee
;@version: 4/18/2014
; uncomment following two lines if using 16f627 or 16f628.
	LIST	p=16F628		;tell assembler what chip we are using
	include "P16F628.inc"	;include the defaults for the chip
	__config 0x3D18			;sets the configuration settings (oscillator type etc.)

; We are telling the assembler we want to start allocating symbolic variables starting
;    at machine location 0x20.

cblock 	0x20 			;start of general purpose registers
		isOn
	endc

	org 0x00
		goto	main

	org 0x04
		goto	isr

main
;the following lines turn off the comparators
		movlw	0x07
		movwf	CMCON				;turn comparators off (make it like a 16F84)

;get ready for interrupts
		bsf		INTCON, GIE			;enable interrupts
		bsf		INTCON, INTE		;B0 is the interrupt line
	
;We must change memory banks to set the TRIS registers

		bsf		STATUS, RP0
		bsf		0x81, INTEDG		;rising edge interrupts
		
		movlw 	b'00000001'
		movwf 	TRISB 				;PORTB is output, with RB0 as input (for the interrupt)
		movlw	0xff
		movwf	TRISA				;PORTA is input
		bcf		STATUS, RP0			;return to bank 0

;actual code follows here
		clrf	isOn
here	
		goto	here
		
;Subroutine: cycle
;Turns on pin7 of PORTB
;Precondition: <requirements for the subroutine to execute correctly>
;Postcondition: <results after correct subroutine execution>
cycle		

			return

;Subroutine: turnOn
;Turns on pin7 of PORTB
;Precondition: <requirements for the subroutine to execute correctly>
;Postcondition: <results after correct subroutine execution>
turnOn		bsf		PORTB, 7
			return

;Subroutine: turnOff
;Turns off pin7 of PORTB
;Precondition: <requirements for the subroutine to execute correctly>
;Postcondition: <results after correct subroutine execution>
turnOff		bcf		PORTB, 7
			return

;all the interrupt data
isr			btfss	isOn, 0
			goto	shouldBeOn
			
			call	turnOff
			goto	endIsr
			
shouldBeOn	call	turnOn

endIsr		incf	isOn, f
			bcf		INTCON, INTF

			retfie

; don't forget the word 'end' (it ends the code)
	end